" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible

" Install and run vim-plug on first run
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    " autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

" Make sure you use single quotes

" NERD tree will be loaded on the first invocation of NERDTreeToggle command
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }

" autocompletion
Plug 'Valloric/YouCompleteMe', { 'do': './install.sh --clang-completer', 'for': ['c', 'cpp', 'python'] }

" fzf
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" useful plugins
Plug 'ntpeters/vim-better-whitespace'
Plug 'Lokaltog/vim-easymotion'
Plug 'tpope/vim-fugitive'
Plug 'itchyny/lightline.vim'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-eunuch'
Plug 'dense-analysis/ale'
Plug 'scrooloose/nerdcommenter'
Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }

" theme
Plug 'tomasr/molokai'
Plug 'morhetz/gruvbox'

" Initialize plugin system
call plug#end()

" disable backup files
set nobackup
set nowb
set noswapfile
set noerrorbells

" Keep undo history across sessions, by storing in file.
" Only works all the time.
if has('persistent_undo')
  silent !mkdir ~/.vim/backups > /dev/null 2>&1
  set undodir=~/.vim/backups
  set undofile
endif

" set up clipboard, mouse and always scroll at center
set mouse=a
set ttymouse=xterm2
set so=999
set clipboard=unnamedplus
set wildmenu
if has('mac')
    set clipboard=unnamed
endif

" basic configuration
if has("gui_running")
"tell the term has 256 colors
  set t_Co=256
end
syntax on
set autoindent
set number
set title
set titlestring=%F\ -\ vim
set noshowmode
set laststatus=2
set background=dark

set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set visualbell                  "No sounds
set autoread

" theme
" colorscheme molokai
colorscheme gruvbox
" for gruvbox theme
let g:gruvbox_vert_split = 'bg1'
let g:gruvbox_sign_column = 'bg0'
hi Normal ctermbg=NONE
hi CursorLineNr ctermfg=white
hi SignColumn ctermbg=NONE

" python 80 chars limitation per line
autocmd filetype python setlocal colorcolumn=80

" encoding
set encoding=utf-8
set termencoding=utf-8
set fileencodings=ucs-bom,utf-8,sjis,big5,gbk,latin1

" file behaviour
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set backspace=indent,eol,start
set smarttab
set linebreak
set breakindent
set nostartofline

" search
set smartcase
set hlsearch
set incsearch

" panes
set splitbelow
set splitright

" custom binding
let mapleader = " "
nnoremap <Leader>h gT
nnoremap <Leader>l gt
map <Leader><space> :StripWhitespace<cr>

" easymotion
map <Leader> <Plug>(easymotion-prefix)

" enable highlighting and stripping whitespace on save by default
let g:better_whitespace_enabled = 1
let g:strip_whitespace_on_save = 1

" ale
let g:ale_fix_on_save = 1

" nertree
map <Leader>n :NERDTreeToggle<CR>
let NERDTreeShowHidden = 1

" disable pymode checking
let g:pymode_lint = 0

" lightline
let g:lightline = {
  \     'active': {
  \         'left': [['mode', 'paste' ], ['readonly', 'filename', 'modified']],
  \         'right': [['lineinfo'], ['percent'], ['gitbranch', 'fileformat', 'fileencoding']]
  \     },
  \     'component_function': {
  \         'gitbranch': 'gitbranch#name'
  \     }
  \ }